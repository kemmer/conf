" ~/.vimrc

" BEGIN vim-plug configuration section
call plug#begin('~/.vim/plugged')
Plug 'connorholyday/vim-snazzy'
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
call plug#end()
" END vim-plug

" Color scheme configuration
colorscheme snazzy

" Activate syntax highlighting
filetype plugin on
syntax on

" Activate displaying numbers in the editor
set number

" Highlight all search matches
set hlsearch

" Configuration for indentation (global): convert tabs to spaces
set expandtab

" Default configurations for indentation
set shiftwidth=4
set softtabstop=4

" vim-gitgutter instant updates
set updatetime=50

" shorcuts for moving around opened tabs
nnoremap <C-Left> :tabprevious<CR>
nnoremap <C-Right> :tabnext<CR>

" Syncronize clipboard between vim and X (gvim installation only)
set clipboard=unnamedplus

" Statusline configuration
set laststatus=2

" :h mode() to see all modes
let g:currentmode={
    \ 'n'      : 'N ',
    \ 'no'     : 'N·Operator Pending ',
    \ 'v'      : 'V ',
    \ 'V'      : 'V·Line ',
    \ '\<C-V>' : 'V·Block ',
    \ 's'      : 'Select ',
    \ 'S'      : 'S·Line ',
    \ '\<C-S>' : 'S·Block ',
    \ 'i'      : 'I ',
    \ 'R'      : 'R ',
    \ 'Rv'     : 'V·Replace ',
    \ 'c'      : 'Command ',
    \ 'cv'     : 'Vim Ex ',
    \ 'ce'     : 'Ex ',
    \ 'r'      : 'Prompt ',
    \ 'rm'     : 'More ',
    \ 'r?'     : 'Confirm ',
    \ '!'      : 'Shell ',
    \ 't'      : 'Terminal '
    \}

function! ReadOnly()
  if &readonly || !&modifiable
    return ''
  else
    return ''
endfunction

function! GitInfo()
  let git = fugitive#head()
  if git != ''
    return fugitive#head()
  else
    return ''
endfunction

set statusline=
set statusline+=%0*\ %{toupper(g:currentmode[mode()])}
set statusline+=\ %<%F\ %{ReadOnly()}\ %m\ %w\ 
set statusline+=%=
set statusline+=\ %{GitInfo()}
set statusline+=\ %y
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=%0*\ %3p%%\ \ %l:%c\ 
set statusline+=\ 

